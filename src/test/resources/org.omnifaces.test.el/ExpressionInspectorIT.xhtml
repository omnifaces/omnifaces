<!--

    Copyright OmniFaces

    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
    the License. You may obtain a copy of the License at

        https://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
    specific language governing permissions and limitations under the License.

-->
<!DOCTYPE html>
<html lang="en"
    xmlns:f="jakarta.faces.core"
    xmlns:h="jakarta.faces.html"
    xmlns:h="jakarta.faces.facelets"
    xmlns:o="http://omnifaces.org/ui"
    xmlns:of="http://omnifaces.org/functions"
>
    <h:head />

    <h:body>
        <h:outputText id="valueReferenceBase" value="#{expressionInspectorITBean.valueReference.base['class'].simpleName}" />
        <h:outputText id="valueReferenceProperty" value="#{expressionInspectorITBean.valueReference.property}" />

        <h:outputText id="getterReferenceBase" value="#{expressionInspectorITBean.getterReference.base['class'].simpleName}" />
        <h:outputText id="getterReferenceMethodName" value="#{expressionInspectorITBean.getterReference.method.name}" />
        <h:outputText id="getterReferenceReturnType" value="#{expressionInspectorITBean.getterReference.returnType.simpleName}" />
        <h:outputText id="getterReferenceParamTypes" value="#{of:joinArray(expressionInspectorITBean.getterReference.paramTypes, ', ')}" />
        <h:outputText id="getterReferenceActualParameters" value="#{of:joinArray(expressionInspectorITBean.getterReference.actualParameters, ', ')}" />

        <h:outputText id="methodReferenceBase" value="#{expressionInspectorITBean.methodReference.base['class'].simpleName}" />
        <h:outputText id="methodReferenceMethodName" value="#{expressionInspectorITBean.methodReference.method.name}" />
        <h:outputText id="methodReferenceReturnType" value="#{expressionInspectorITBean.methodReference.returnType.simpleName}" />
        <h:outputText id="methodReferenceFirstParamType" value="#{empty expressionInspectorITBean.methodReference.paramTypes ? '' : expressionInspectorITBean.methodReference.paramTypes[0].simpleName}" />
        <h:outputText id="methodReferenceFirstActualParameter" value="#{empty expressionInspectorITBean.methodReference.actualParameters ? '' : expressionInspectorITBean.methodReference.actualParameters[0]['class'].simpleName}" />

        <h:outputText id="valueMethodReferenceBase" value="#{expressionInspectorITBean.valueMethodReference.base['class'].simpleName}" />
        <h:outputText id="valueMethodReferenceMethodName" value="#{expressionInspectorITBean.valueMethodReference.method.name}" />
        <h:outputText id="valueMethodReferenceReturnType" value="#{expressionInspectorITBean.valueMethodReference.returnType.simpleName}" />
        <h:outputText id="valueMethodReferenceParamTypes" value="#{of:joinArray(expressionInspectorITBean.valueMethodReference.paramTypes, ', ')}" />
        <h:outputText id="valueMethodReferenceActualParameters" value="#{of:joinArray(expressionInspectorITBean.valueMethodReference.actualParameters, ', ')}" />

        <h:outputText id="methodValueReferenceBase" value="#{expressionInspectorITBean.methodValueReference.base['class'].simpleName}" />
        <h:outputText id="methodValueReferenceProperty" value="#{expressionInspectorITBean.methodValueReference.property}" />

        <h:outputText id="methodMethodReferenceBase" value="#{expressionInspectorITBean.methodMethodReference.base['class'].simpleName}" />
        <h:outputText id="methodMethodReferenceMethodName" value="#{expressionInspectorITBean.methodMethodReference.method.name}" />
        <h:outputText id="methodMethodReferenceReturnType" value="#{expressionInspectorITBean.methodMethodReference.returnType.simpleName}" />
        <h:outputText id="methodMethodReferenceParamTypes" value="#{of:joinArray(expressionInspectorITBean.methodMethodReference.paramTypes, ', ')}" />
        <h:outputText id="methodMethodReferenceActualParameters" value="#{of:joinArray(expressionInspectorITBean.methodMethodReference.actualParameters, ', ')}" />
    </h:body>
</html>